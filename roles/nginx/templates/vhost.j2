fastcgi_cache_path /etc/nginx/cache levels=1:2 keys_zone={{ nginx.vhost.name }}_fcgi:128m max_size=256m inactive=30m;
fastcgi_cache_key "$scheme$request_method$host$request_uri";
fastcgi_cache_use_stale error timeout invalid_header http_500;
fastcgi_ignore_headers Cache-Control Expires Set-Cookie;

#limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:16m;
#limit_req_zone $binary_remote_addr zone=req_limit_per_ip:16m rate=5r/s;

server {
    listen 80;
    listen [::]:80;
    listen {{ nginx.vhost.listen_port }} ssl http2 default_server;
    listen [::]:{{ nginx.vhost.listen_port }} ssl http2 default_server;

    root {{ nginx.vhost.document_root }};
    server_name {{ nginx.vhost.server_name }};
    index index.html index.php;
    charset utf-8;

    #ssl on;
    ssl_certificate /etc/nginx/ssl/{{ nginx.vhost.name }}.crt;
    ssl_certificate_key /etc/nginx/ssl/{{ nginx.vhost.name }}.key;
    ssl_protocols TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_ecdh_curve secp384r1;
    ssl_prefer_server_ciphers on;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:30m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    #ssl_dhparam /etc/ssl/dhparam.pem;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    #add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-UA-Compatible "IE=Edge" always;
    add_header X-Cache-Status $upstream_cache_status always;

    access_log /var/log/nginx/{{ nginx.vhost.name }}.access.log;
    error_log /var/log/nginx/{{ nginx.vhost.name }}.error.log {{ nginx.vhost.log_level }};

    set $no_cache {{ nginx.vhost.set_no_cache }};
    expires off;

    #limit_conn conn_limit_per_ip 10;
    #limit_req zone=req_limit_per_ip burst=10 nodelay;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass {{ nginx.vhost.fastcgi_pass }};
        fastcgi_cache {{ nginx.vhost.name }}_fcgi;
        fastcgi_cache_valid 200 301 302 {{ nginx.vhost.fastcgi_cache_valid_time }};
        fastcgi_cache_methods GET HEAD;
        fastcgi_cache_bypass $no_cache;
        fastcgi_no_cache $no_cache;
        fastcgi_buffer_size 64k;
        fastcgi_buffers 128 16k;
        fastcgi_busy_buffers_size 128k;
        fastcgi_temp_file_write_size 128k;
    }

    location ~* \.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ {
        add_header Cache-Control "{{ nginx.vhost.static_cache_control_header }}";
        expires {{ nginx.vhost.static_expires }};
        access_log off;
        log_not_found off;
    }

    location ~* \.(?:svgz?|ttf|ttc|otf|eot|woff|woff2)$ {
        add_header Cache-Control "{{ nginx.vhost.static_cache_control_header }}";
        expires {{ nginx.vhost.static_expires }};
        access_log off;
        log_not_found off;
    }

    location ~ /\.ht { deny all; }
    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt { access_log off; log_not_found off; }
    location = /poke { access_log off; return 200 "I'm alive!"; }

    #error_page 400 401 403 404 /40x.html;
    #error_page 500 502 503 504 /50x.html;
    #location = /40x.html { root {{ nginx.vhost.document_root }}; }
    #location = /50x.html { root {{ nginx.vhost.document_root }}; }
}
